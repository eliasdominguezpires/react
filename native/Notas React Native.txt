Ejecutar en un dispositivo
react-native run-android 
react-native run-ios

Que es REAT JS

es una biblioteca para contruir interfaz de web de usuarios

single page application 

no renderiza toda la pantalla, cambia solo la parte que cambio

se basa en componentes, una vez creado se reutiliza cuantas veces queramos 
en cualquier tipo de aplicacion, el componente en si no es mas que una union
HTML+CSS+JS,

https://facebook.github.io/react-native/
https://reactnavigation.org/docs/en/auth-flow.html
http://www.reactnative.com/uiexplorer/		EJEMPLOS
https://github.com/LeonidasEsteban/platzi-video-react-navigation
https://github.com/LeonidasEsteban/platzi-video-react-navigation/tree/master/src/screens/containers
https://facebook.github.io/react-native/docs/signed-apk-android#docsNav
https://yts.am/api#movie_suggestions
https://facebook.github.io/react-native/docs/components-and-apis.html#basic-components
https://flutter-es.io/
http://www.reactnative.com/uiexplorer/

https://github.com/juandc
https://github.com/juandc/PlatziMusic
https://github.com/LeonidasEsteban?utf8=%E2%9C%93&tab=repositories&q=platzi&type=&language=

Entra directamente al curso: https://platzi.com/cursos/react-native/

Aquí el curso de Redux: https://platzi.com/cursos/redux/
Aquí el curso de Ract.js: https://platzi.com/cursos/react/

https://github.com/halilb/react-native-textinput-effects

Con React Native aprovecharás todos los conocimientos que ya tienes de JavaScript y no hacer una aplicación que corra dentro de un navegador que finja ser una aplicación instalable, sino que va a hacer una aplicación totalmente nativa y al mismo tiempo en el que desarrollamos una aplicación para Android, también nos va a funcionar en IOS y hasta puedes hacerle tus diseños diferentes para Android y para IOS como tú quieres. Pero puedes y todo está al alcance de tus manos.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
https://facebook.github.io/react-native/docs/image#resizemode
SafeAreaView - renderiza el contenido en un area segura para que el contenido se vea bien en todos los dispositivos principalmente los que tienen un notch

Estilos para imagenes dentro de RN, se llama resizeMode que sería similar a background-size de css.
**_resizeMode _**por Default esta en cover, otras opciones son contain, stretch, repeat, center.

El padding en RN funciona un poco diferente ya que se le puede dar un padding general (top, right, bottom, left), pero si se quiere hacer solamente para right & left se tiene que hacer a mano. Para estos casos se agregan 2 opciones para utilizar:

paddingVertical: esto sería lo equivalente a utilizar (_paddingTop _y paddingBottom)

paddingHorizontal: esto sería lo equivalente a utilizar (_paddingRight _y paddingLeft)

Algo que hemos venido usando es el navigation prop, que es la funcion que nos permite navegar. Veamos que otras opciones nos ofrece esta opción.

.navigate(): Sirve para ir a otra pantalla de las rutas definidas.
.goBack(): Es para movernos hacia atrás en la ruta.
.addListener(): Para que puedas escuchar eventos dentro de la pantalla a la que estas llegando.
.isFocused(): Retorna Verdadero o falso si estas o no en una pantalla.
.state: retorna el key, la ruta, parametros.
.setParams(): setear parametros.
.dispatch() documentacion: https://reactnavigation.org/docs/en/stack-actions.html#push

StackActions:

.push() Agrega una pantalla al Stack sin importar si ya estaba el Stack.
.pop() Va a quitar el ultimo elemento del Stack.
.popToTop() Va a quitar todos hasta quedar al primer elemento del Stack.
.replace() Reemplaza los datos de un elemento del Stack.
.reset() Reemplaza el estado actual con un nuevo estado (todo el Stack).

Navigation Actions

.navigate() - Navegar a otra ruta
.back() - Volver a un estado previo
.setParams() - Establecer parámetros para la ruta dada
.init() - Se usa para inicializar el primer estado si el estado no está definido

Configurando React Navigation con Redux

app-navigator.js: Tener un solo archivo con el componente que crea el navigator.
Installar react-navigation-redux-helpers: Middlewares y utilidades para integrar react navigation a un proyecto con redux.
navigation.js:
createNavigationReducer helper pasando por parametro el componente de navegación (app-navigator)
Combinar reducers
store.js:
Traer el reducer principal
Usar createReactNavigationReduxMiddleware para que nuestro store pueda escuchar las acciones de react navigation
app-navigator-with-state.js
Conectar el componente a redux
Utilizar createReduxBoundAddListener, createDidUpdateCallBack y initiaizeListeners
Personalizar el componente de app-navigator

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
**Padding **

paddingVertical: value (Top and Bottom)
paddingHorizontal: value (Right and Left)
paddingTop: value
paddingBottom: value
paddingRigth: value
paddingLeft: value

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
TAB
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
createTabNavigator 		= DEPRECATE

createBottomTabNavigator(routeConfig 'CONFIGURAR LAS RURAS'
, bottomTabNavigatorConfig 'CONFIGURARLO VISUALMENTE')

* Configuración del bottomTabNavigatorConfig

tabBarComponent					
tabBarPosition - top | bottom	si quiero que este en la parte superior o inferior 
swipeEnabled					Habilitar los gestos, de navagacion
animationsEnabled				a parte de habilitar los gestos, si hay o no animaciones
lazy							si quiero que todas mis ventanas carguen al mismo tiempo
removeClippedSubviews			para aumentar el rendimiento
initialLayout					para ver como funcionan la disposicion de los otros elementos
tabBarOptions					opciones visuales para el tab bar

activeTintColor					el color de fondo del tab
activeBackgroundColor			el color de fondo
tinColor						color del texto
inactiveTintColor				los tab que no estan activos, como configurar, el texto
inactiveBackgroundColor			color de fondo cuando no esta activo
showLabel						si se va a mostrar los textos
style							agregar estilos
labelStyle						estilo del texto
allowFontScaling				

* navigationOptions en Tab Navigator

Title							personalizar titulo
tabBarIcon						para ponerle icono personalizado
tabBarColor						color de los tabs
tabBarLavel						cambiar color el texto
tabBarAccessibilityLabel		para dar una referencia de accecibilidad
tabBarTestID					id que se le da para poder cliquear automatizado
tabBarOnPress					para poder percibir todas las preciones que ocurren en los tab

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
SafeAreaView en iPhone solo funciona desde iOS 11 en adelante, para teléfonos sin actualizar como un iPhone 5 hay que usar Platform para ajustar el texto debajo del staturBar y un parseInt para convertir la version en número debido a que iOS 10.3.3 no podria ser comparado

import React from'react'
import {
	...
  Platform
} from'react-native'

functionHeader (props) {
	return (
		<SafeAreaViewstyle={styles.statusBar} >
			<Viewstyle={styles.container} >
				 ...
</View>
		 </SafeAreaView>
	)
}

const styles = StyleSheet.create({
	...
	container: {
		...
		marginTop: parseInt(Platform.Version) <= 11 ? 10 : 0
	},
})
exportdefault Header


Listas

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
FlatLists: puede ser utilizada para listas sencillas.

SectionLists: puede ser utilizada para listas más complejas.


-----------------------------------------------------------------------------------------------------------------------------------------------------------------
REACT-NAVIGATION
https://reactnavigation.org/docs/en/stack-navigator.html#navigationoptions-for-screens-inside-of-the-navigator
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Un StackNavigator es como un “array”, donde podemos añadir y quitar elementos (Push y Pop) entre otras cosas.

El método createStackNavigator() recibe:

Configuración de Ruta: Lista de las rutas, cada ruta puede en un objeto con configuraciones especificas.
Configuración del StackNavigator: Configuración global donde podemos definir como va a funcionar nuestra navegación (cards, modals, configuraciones visuales).
Párametros para la configuración de Ruta:

screen: Componente.
path: Deep Linking.
navigationOptions: Personalización particular de la pantalla (Titulo en el navigator).
Parámetros para la configuración del StackNavigator:

initialRouteName: Desde que ruta queremos arrancar.
initialRouteParams: Parametros a la pantalla inicial de la aplicación.
initialRouteKey: Navegación por keys.
navigationOptions: Similar a los parámetros de navegación de rutas, pero en este caso son globales.
paths: configuraciones para Deep Linking.

Stack Navigator Config - Navigation Options
* title: Titulo en la parte de encima
* header: Componente personalizado
* headerTitle: Similar a title
* headerAllowFontScaling: El font size se escala dependiendo el dispositivo
* headerBackImage: La imagen para el botón de regresar, por default está una flecha
* headerBackTitle: Texto que acompaña al botón de regresar
* headerTruncateBackTitle: Un texto más corto en dado caso que el headerTitle no alcance el espacio
* headerRight: Componente personalizado orientado a la derecha
* headerLeft: Componente personalizado orientado a la izquierda
* headerStyle: Estilos para el header
* headerForceInset: Mover el header para arriba, abajo, izquierda
* headerTitleStyle: Estilos al titulo
* headerTintColor: Color del background del header
* headerPressColorAndroid: Color del background del header al presionarlo
* headerTransparent: Por si se necesita que el header sea transparente
* headerBackground: Por si se necesita una imagen de fondo en el header
* gesturesEnableb: Por si quieres que los gestos esten activados (por default iOS los tiene Android no)
* gesturesResponseDistance: Para la sensibilidad al momento de arrastrar a otra pantalla
* gesturesDirection: Por si se necesita invertir el cambio de dirección al cambiar de pantalla

Parámetros de las configuraciones visuales de StackNavigator:

mode:
modal al cambiar de pantalla esta entra de abajo hacia arriba (por default en android)
card al cambiar de pantalla esta entra desde el costado(por default en iOS)
headerMode:
none, sin un header.
screenel header se mueve (default android).
float el header se queda fijo (default iOS).
headerTransitionPreset: animación en el header.
fade-in-place (alfa de 0 a 1).
uikit (el header se mueve y también cambia el alfa de 0 a 1).
cardStyle: Estilos para el componente que envuelve nuestra screen (backgroundColor, borders, etc).

En cualquier componente que sea una pantalla, recibimos un método estático navigationOptions donde vamos a retornar las opciones que podemos configurar.

static navigationOptions = ({ navigation }) => {
    return {
        title: navigation.getParam('name')
    }
}
Con el método navigate() ademas de “movemos” hacia otra pantalla, también le podemos enviarle parámetros como segundo parámetro:

handlePress = () => {
    this.props.navigation.navigate('Profile', {
        name: 'Ivan Robles'
    });
}
Podemos obtener parámetros con el método de navigation getParam(), el cual recibe 2 cosas, el parámetro que queremos obtener y un valor por defecto para ese parámetro en caso de no encontrarlo:

navigation.getParam('age', 30);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
LOADER
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
import Loader from "./src/loader/components/loader";

<Home>
<Header />
<Text>buscador</Text>
<Text>categorias</Text>
{this.state.loading ? (
  <Loader />
) : (
	<SuggestionList list={this.state.suggestionList} />
  )}
</Home>


-----------------------------------------------------------------------------------------------------------------------------------------------------------------
MULTILENGUAJE
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
https://www.npmjs.com/package/react-intl-v2

https://github.com/AlexanderZaytsev/react-native-i18n

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Volver a generar carpeta IOS / ANDROID 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
El proceso que debe seguir es tan similar a cambiar el nombre de una aplicación nativa reaccionar. Básicamente, solo necesita ejecutar react-native upgrade en su directorio de proyecto raíz. Para obtener más información, puede consultar otra pregunta here. Las instrucciones a continuación explican cómo crear otro proyecto nativo de reacción basado en uno copiado con un nombre nuevo.

Primero copie el directorio que tiene su aplicación to-be-name-changed. Y vaya a su directorio recientemente clonado.
Cambie el nombre en el archivo index.ios/android.js que se proporciona como un parámetro para AppRegistry.
cambiar el nombre y la versión en consecuencia package.json
Eliminar /ios y /android carpetas que están restante de su aplicación más.
Ejecute $react-native upgrade para generar /ios y /android carpetas de nuevo.
Ejecute $react-native link para cualquier dependencia nativa.
Finalmente ejecuta $react-native run-ios o lo que quieras.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
VIDEO
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
https://platzi.com/clases/1292-react-native/11698-controlando-el-buffer-del-video/
https://github.com/jjyepez/platziVideosApp/tree/master/src
https://github.com/ernestognw/video-app-react-native/tree/master/src/player
https://github.com/ernestognw/video-app-react-native/tree/master/src
https://github.com/rojasleon/react-native-platzi-video/tree/13-video-player-complete
https://github.com/jalcantara90/Video-App-React
https://github.com/react-native-community/react-native-video
https://github.com/abbasfreestyle/react-native-af-video-player

import Video from 'react-native-af-video-player'

<Video 
	url={{uri:'https://download.blender.org/peach/bigbuckbunny_movies/BigBuckBunny_320x180.mp4'}} 
/>





import React, { Component } from 'react';
import {
  Text,
  View,
} from 'react-native';

import Home from './src/screens/containers/home';
import Header from './src/sections/components/header';
import SuggestionList from './src/videos/containers/suggestion-list';
import Loader from "./src/loader/components/loader";
import API from './utils/api';
import CategoryList from './src/videos/containers/category-list';
import Player from './src/player/containers/player';

import { Provider } from 'react-redux';
import store from './src/store'

type Props = {};
export default class App extends Component<Props> {
  state = {
    //suggestionList: [],
    //categoryList: [],
    loading: true
  }
  async componentDidMount() {

    const suggestionList = await API.getSuggestion(10);
    //console.log(movies);

    const categoryList = await API.getMovies();
    //console.log(categories);
    /*
    this.setState({
      suggestionList: movies,
      categoryList: categories,
      loading: false,
    })
    */
    store.dispatch({
      type: 'SET_CAREGORY_LIST',
      payload: {
        categoryList
      }
    })

    store.dispatch({
      type: 'SET_SUGGESTION_LIST',
      payload: {
        suggestionList
      }
    })
  }
  render() {
    return (
      <Provider
        store={store}
      >
        <Home>
          <Header />
          <Player />
          <Text>buscador</Text>
          {this.state.loading ? (
            <Loader />
          ) : (
              <CategoryList />
            )}
          {this.state.loading ? (
            <Loader />
          ) : (
              <SuggestionList />
            )}
        </Home>
      </Provider>
    );
  }
}

Con qué comando creas una aplicación con el cliente de react-native				
		npm install -g create-react-native-app 
		$ create-react-native-app my-app 
		$ cd my-app/ 
		$ npm start
		??react-native init

Como se recarga la aplicación en el emulador de iOS
		command + r

Con cual de estos componentes podemos crear listas en React Native
		FlatList

En qué propiedad de react-native-video <Video /> podemos configurar si el video está o no en reproducción
		paused


Con qué propiedad de FlatList asignas el componente utilizado como elemento de la lista
		renderItem

Con qué componente podemos agregar un website dentro de una app en React Native
		WebView

Con qué comando de react-native podemos enlazar alguna dependencia extra que querramos instalar
		link

Qué propiedad de FlatList crea listas horizontales
		horizontal

¿Qué API nos expone componentes y funciones para realizar animaciones en React Native?
		Animated

Qué componente de React Native nos da soporte al notch (iphone X)
		SafeAreaView

Con qué comando creas una aplicación con el cliente de react-native
		react-native run-android

Con qué comando puedes ver la versión de react-native y react-native-cli
		react-native --version /-v

Componente que asemeja el uso de divs de HTML en React-Native
		<View />

Componente usado para manejar textos en react native
		<Text />

Con qué conjunto de teclas se recarga la aplicación en el emulador de android
		??doble tap en r

		r + r
		ctrl + m / r

¿En qué key debo agregar la ruta de una imagen que venga por internet dentro de la propiedad source en el componente Image?
		URI
		
En que propiedad de react-native-video <Video /> podemos asignar la ruta del video
		source

Componente usado para manejar textos en react native
		TEXT
		
Que propiedad de <PersistGate /> nos ayuda a poner un componente mientras los datos son persistidos		
		??loading={<div />}

¿Qué componente expone redux-persist para persistir datos?		
		??persisGate
		
Con qué propiedad de FlatList puedes asignar un estado de “vacío”
		ListEmptyComponent
		
Con qué comando puedes ver la versión de react-native y react-native-cli
		react-native-v
		
Con que comando sacamos el menú de desarrollo en Android
		control o commant m

Con que modulo de React Native podemos validar código para las diferentes plataformas
		platfomr
		
Con qué propiedad de FlatList podemos asignar un key custom con los datos de cada elemento de la lista
		keyExtractor
		
Con que comando sacamos el menú de desarrollo en iOS
		command control z

Con que dependencia que acompaña a Redux podemos guardar los datos en “cache” para consumirlos luego hasta cuando no tengamos internet
		redux-persist

¿Qué componente expone react-redux para distribuir el store?		
		??provider
	
		
		
		
		

		
NAVIGATION

Dentro del navigation prop ¿cuál sería la opción correcta si quiero enviar una acción?
dispatch

Dentro del navigation prop ¿cuál sería la opción correcta *si quiero navegar a la pantalla anterior?
		goBack

Dentro del navigation prop ¿cuál sería la opción correcta si quiero escuchar el evento “didFocus”?
		addListener

Si quiero hacer una navegación por ventanas emergentes (modal) ¿cuál sería el navigator más adecuado?
		createStackNavigator
		

Un DrawerNavigator tiene una configuración para personalizar su ancho ¿cuál es?
		drawerWidth

Hay un componente en React Native que nos ayuda a crear elemento presionables con la UI adecuada para iOS y Android ¿Cuál es?
		Button

A veces nuestro proyecto por alguna razón muestra una pantalla roja y uno de los consejos más relevantes es prender el servidor de desarrollo nuevamente limpiando cache, ¿que bandera nos ayuda a borrar cache en React Native?
reset-cache


Si quiero hacer una navegación por un menú lateral ¿cuál sería el navigator más adecuado?
createDrawerNavigator

¿En qué configuración de un DrawerNavigator podemos personalizar todo el menú lateral por un componente propio?
contentComponent

¿En qué configuración de un StackNavigator dentro del navigationOptions podemos definir un componente para personalizar el header?
header

Si tengo una navigator de tipo Stack dentro de qué configuración podré configurar la propiedad title para personalizar el header
navigationOptions

En un TabNavigator ¿cómo podemos personalizar el ícono de cada tab?
tabBarIcon

Si quiero hacer una navegación por tabs ¿cuál sería el navigator más adecuado?
createBottomTabNavigator

Dentro del navigation prop ¿cuál sería la opción correcta si quiero entrar a otra pantalla?
navigate

¿Cómo podemos obtener una acción personalizada para navigate dentro de librería react-navigation?
NavigationActions

¿Cómo podemos hacer una acción para hacer push o pop en React Navigation?
StackActions

¿Qué propiedad de los navigators se puede manipular desde cada screen?
navigationOptions

Un DrawerNavigator tiene una configuración para personalizar su color de fondo ¿cuál es?
		XXX drawerBackgroundColor
		xxx drawerWidth
		XXX 20-01 contentOptions

Dentro del navigation prop ¿cuál sería la opción correcta si quiero obtener un dato que venga de otra pantalla?
getPram

En un DrawerNavigator ¿cómo podemos personalizar el ícono de cada tab?
		XXX style
		XXX TabBarIco
		20-01 drawerIcon

A veces vamos a querer usar el navigation prop pero en un componente que no lo reciba nativamente (una pantalla), ¿Cuál sería el decorador de React Navigation que nos ayudaría a resolver esta necesidad?
		whithNavigation

¿Cuál sería el componente de React Native más adecuado para manipular los colores de la barra superior que ves en Android y iOS?
		XXX  statusBar
		XXX  SafeAreaView
		XXX  20-01 VIEW

Si estoy haciendo un flujo de login ¿cuál sería el navigator más adecuado?
createSwitchNavigator

¿Cuál sería el parámetro indispensable en la función navigate de los NavigationActions?		
		ROUTENAME
		
¿En qué configuración de un StackNavigator podemos decidir si queremos una navegación por card o modal?
		mode